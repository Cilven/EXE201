<div class=" mt-5">
    <h1 class="text-center mb-4">T·∫°o h·ªôp qu√† c·ªßa b·∫°n</h1>

    <ul class=" container nav nav-tabs mb-4">
        <li class="nav-item">
            <a class="nav-link" id="step1-tab"  href="/custom-gifts/gift">H∆∞·ªõng d·∫´n</a>
        </li>
        <li class="nav-item">
            <a class="nav-link " id="step1-tab"  href="/custom-gifts">B∆∞·ªõc 1: Ch·ªçn s·∫£n ph·∫©m</a>
        </li>
        <li class="nav-item">
            <a class="nav-link " id="step2-tab"  href="/custom-gifts/box">B∆∞·ªõc 2: Ch·ªçn H·ªôp qu√†
                t·∫∑ng</a>
        </li>
        <li class="nav-item">
            <a class="nav-link active" id="step3-tab"  href="/custom-gifts/mes">B∆∞·ªõc 3: Th√™m tin
                nh·∫Øn c√° nh√¢n</a>
        </li>
    </ul>

    <div class="container tab-content">
        <!-- Tab 2 -->
        <div class="tab-pane fade show active" id="step3">
            <h3>Th√™m tin nh·∫Øn c√° nh√¢n</h3>

            <!-- Ch·ªçn m·∫´u th∆∞ b·∫±ng h√¨nh ·∫£nh -->
            <div class="mb-3">
                <h5>Ch·ªçn m·∫´u th∆∞:</h5>
                <p class="template-price">Gi√°: 5.000VND</p>

                <div class="d-flex flex-wrap">
                    {{#if mess.length}}
                    {{#each mess}}
                    <div class="card m-2" style="width: 150px;" onclick="selectTemplate('{{this._id}}')">
                        <img src="{{this.image}}" class="card-img-top selected-template" id="{{this._id}}"
                            alt="{{this.name}}">

                    </div>
                    {{/each}}
                    {{else}}
                    <p>Thi·ªáp ƒëang h·∫øt trong kho</p>
                    {{/if}}




                </div>
            </div>

            <!-- √î nh·∫≠p tin nh·∫Øn c√° nh√¢n -->
            <textarea class="form-control custom-message" rows="4" id="personal-message"
                placeholder="Vi·∫øt tin nh·∫Øn c·ªßa b·∫°n ·ªü ƒë√¢y..."></textarea>

            <div class="text-center mt-3">
                <a href="/custom-gifts/box">
                    <button class="btn btn-secondary next" onclick="goToStep(2)">B∆∞·ªõc tr∆∞·ªõc</button>

                </a>
                <button class="btn btn-success next" onclick="showConfirmation()">G·ª≠i qu√† t·∫∑ng</button>
            </div>
        </div>
    </div>
</div>



<!-- Modal X√°c nh·∫≠n -->
<div class="modal" id="confirmationModal">

    <div class="modal-content">

        <h5 class="modal-title" id="confirmationModalLabel">üéÅ G·ª≠i qu√† t·∫∑ng!</h5>




        <div id="modal-message">
            <p><strong>S·∫£n ph·∫©m ƒë√£ ch·ªçn:</strong></p>
            <ul id="selected-products-list"></ul>

            <p><strong>H·ªôp qu√†:</strong> <span id="selected-box">Ch∆∞a ch·ªçn</span> </p>
            <p><strong>Thi·ªáp:</strong> <span id="selected-card">Ch∆∞a ch·ªçn</span></p>
            <p><strong>Tin nh·∫Øn c√° nh√¢n:</strong> <span id="selected-message">Kh√¥ng c√≥</span></p>
            <p><strong>M·∫´u thi·ªáp ƒë√£ ch·ªçn:</strong></p>
            <img id="selected-card-img" src="https://i.ytimg.com/vi/jRnBvlMUvK0/maxresdefault.jpg" alt="Thi·ªáp ƒë√£ ch·ªçn"
                style="width: 150px; border: 1px solid #ddd;">

            <p><strong> <br>T·ªïng s·ªë ti·ªÅn:</strong> <span id="total-price">0 VND</span></p>
        </div>



        <button type="button" data-dismiss="modal" class="btn btn-secondary" style="margin: 5px;">ƒê√≥ng</button>
        <button type="button" id="add-to-cart-btn" class="btn btn-primary checkout-btn" {{!-- data-bs-toggle="modal"
            --}} data-bs-target="#paymentModal" style="margin: 5px;">Ti·∫øn h√†nh thanh to√°n</button>


    </div>
</div>




<!-- Payment Modal -->
<div class="modal fade" id="paymentModal" tabindex="-1" aria-labelledby="paymentModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="paymentModalLabel">Ch·ªçn ph∆∞∆°ng th·ª©c thanh to√°n</h5>

            </div>
            <div class="modal-body">
                <p>Ch·ªçn ph∆∞∆°ng th·ª©c thanh to√°n b·∫°n mu·ªën:</p>
                <div class="d-flex justify-content-around mt-4">
                    <div id="qrBtn" class="payment-option">
                        <img src="./cart/image" alt="QR Code" style="width: 50px;">
                        <p>QR Code</p>
                    </div>
                    <div id="cashBtn" class="payment-option">
                        <i class="fas fa-money-bill-alt fa-2x"></i>
                        <p>Thanh to√°n khi nh·∫≠n h√†ng</p>
                    </div>
                </div>

                <!-- QR Code Payment Option -->
                <div id="qrSection" class="text-center">
                    <p>Qu√©t m√£ QR ƒë·ªÉ ho√†n t·∫•t thanh to√°n:</p>
                    <img src="./906232d07a04c25a9b15.jpg" alt="QR Code" class="img-fluid mx-auto d-block"
                        style="max-width: 200px;">
                </div>




                <!-- Cash on Delivery Form -->
                <form id="cashForm" class="mt-4" method="POST" action="/custom-gifts/payment">
                    <input type="hidden" id="selectedProductsInput" name="selectedProducts">
                    <input type="hidden" id="selectedBoxInput" name="selectedBox">
                    <input type="hidden" id="selectedCardInput" name="selectedCard">
                    <input type="hidden" id="personalMessageInput" name="personalMessage">
                    <input type="hidden" id="totalPriceInput" name="totalPrice">
                    <div class="mb-3">
                        <label for="name" class="form-label">T√™n</label>
                        <input type="text" class="form-control" id="name" name="name" required>
                    </div>
                    <div class="mb-3">
                        <label for="phone" class="form-label">S·ªë ƒëi·ªán tho·∫°i</label>
                        <input type="tel" class="form-control" id="phone" name="phone" required pattern="[0-9]{10}">
                    </div>
                    <div class="mb-3">
                        <label for="address" class="form-label">ƒê·ªãa ch·ªâ</label>
                        <input type="text" class="form-control" id="address" name="address" required>
                    </div>
                    <div class="mb-3">
                        <label for="email" class="form-label">Email</label>
                        <input type="email" class="form-control" id="email" name="email" required>
                    </div>
                    <button type="submit" class="btn btn-primary w-100 mt-3">X√°c nh·∫≠n ƒë∆°n h√†ng</button>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">ƒê√≥ng</button>


            </div>
        </div>
    </div>
</div>







<script>
// üè∑Ô∏è Chuy·ªÉn s·ªë th√†nh "10.000" (KH√îNG c√≥ ‚Ç´)
function formatCurrency(value) {
    return new Intl.NumberFormat("vi-VN").format(value);
}

// üî¢ Chuy·ªÉn "10.000" v·ªÅ s·ªë nguy√™n (10000) ƒë·ªÉ t√≠nh to√°n
function parseCurrency(value) {
    return parseInt(value.replace(/[^\d]/g, ""), 10) || 0; // Lo·∫°i b·ªè k√Ω t·ª± kh√¥ng ph·∫£i s·ªë
}

// üìå C·∫≠p nh·∫≠t gi√° ti·ªÅn hi·ªÉn th·ªã tr√™n giao di·ªán
document.querySelectorAll(".price-display").forEach(priceElement => {
    let price = parseCurrency(priceElement.textContent); 
    priceElement.textContent = formatCurrency(price);
});

// üè∑Ô∏è C·∫≠p nh·∫≠t t·ªïng ti·ªÅn
function updateTotalPrice() {
    let totalPrice = 0;
    
    document.querySelectorAll(".selected-product").forEach(item => {
        let price = parseCurrency(item.dataset.price);
        let quantity = parseInt(item.dataset.quantity, 10) || 1;
        totalPrice += price * quantity;
    });

document.getElementById("total-price").textContent = formatCurrency(totalPrice);
}

// G·ªçi c·∫≠p nh·∫≠t t·ªïng ti·ªÅn
updateTotalPrice();




    document.getElementById('add-to-cart-btn').addEventListener('click', function () {
        var paymentModal = new bootstrap.Modal(document.getElementById('paymentModal'));
        paymentModal.show();
    });

    // Toggle between QR code and Cash on Delivery sections
    document.getElementById("qrBtn").addEventListener("click", function () {
        document.getElementById("qrSection").style.display = "block";
        document.getElementById("cashForm").style.display = "none";
        this.classList.add("selected");
        document.getElementById("cashBtn").classList.remove("selected");
    });

    document.getElementById("cashBtn").addEventListener("click", function () {
        document.getElementById("cashForm").style.display = "block";
        document.getElementById("qrSection").style.display = "none";
        this.classList.add("selected");
        document.getElementById("qrBtn").classList.remove("selected");
    });



    function selectTemplate(templateId) {
        document.querySelectorAll('.selected-template').forEach(img => {
            img.classList.remove('selected');
            img.style.border = 'none';
        });

        const selectedImage = document.getElementById(templateId);
        selectedImage.classList.add('selected');
        selectedImage.style.border = '2px solid #007bff';

        // L∆∞u URL v√† th√¥ng tin thi·ªáp v√†o sessionStorage
        const selectedCardData = { id: templateId, image: selectedImage.src, name: selectedImage.alt };
        sessionStorage.setItem("selectedCard", JSON.stringify(selectedCardData));
    }



    // üõí L∆∞u s·∫£n ph·∫©m ƒë√£ ch·ªçn v√†o sessionStorage
    function saveSelectedProducts(items) {
        sessionStorage.setItem("selectedProducts", JSON.stringify(items));
    }

    function getSelectedProducts() {
        return JSON.parse(sessionStorage.getItem("selectedProducts")) || [];
    }

    function updateSelectedProducts(productId, name, price, quantity) {
        let selectedProducts = getSelectedProducts();

        const existingProductIndex = selectedProducts.findIndex(item => item.productId === productId);
        if (existingProductIndex !== -1) {
            selectedProducts[existingProductIndex].quantity = quantity;
        } else {
            selectedProducts.push({ productId, name, price, quantity });
        }

        saveSelectedProducts(selectedProducts);
    }

    // üéÅ L∆∞u h·ªôp qu√† ƒë√£ ch·ªçn
    function saveSelectedGiftBox(name, price) {
        const selectedBox = { name, price };
        sessionStorage.setItem("selectedGiftBox", JSON.stringify(selectedBox));
    }

    function getSelectedGiftBox() {
        return JSON.parse(sessionStorage.getItem("selectedGiftBox")) || null;
    }

    function updateSelectedGiftBox(name, price) {
        document.getElementById("selected-box").textContent = name ? `${name} - ${price} VND` : "Ch∆∞a ch·ªçn";
        saveSelectedGiftBox(name, price);
    }




    // ‚úâÔ∏è L∆∞u thi·ªáp ƒë√£ ch·ªçn
    function saveSelectedCard(cardId, cardName, cardImage) {
        const selectedCard = { id: cardId, name: cardName, image: cardImage };
        sessionStorage.setItem("selectedCard", JSON.stringify(selectedCard));
    }

    function getSelectedCard() {
        return JSON.parse(sessionStorage.getItem("selectedCard")) || null;
    }

    // Khi ng∆∞·ªùi d√πng ch·ªçn thi·ªáp
    function updateSelectedCard(cardId, cardName, cardImage) {
        document.getElementById("selected-card").textContent = cardName ? cardName : "Ch∆∞a ch·ªçn";
        document.getElementById("selected-card-img").src = cardImage;
        saveSelectedCard(cardId, cardName, cardImage);
    }


    // üìù L∆∞u tin nh·∫Øn c√° nh√¢n
    function savePersonalMessage(message) {
        sessionStorage.setItem("personalMessage", message);
    }

    function getPersonalMessage() {
        return sessionStorage.getItem("personalMessage") || "Kh√¥ng c√≥";
    }

    document.getElementById("personal-message").addEventListener("input", (event) => {
        savePersonalMessage(event.target.value);
    });




    // üõçÔ∏è Hi·ªÉn th·ªã th√¥ng tin trong modal x√°c nh·∫≠n
    function showConfirmation() {
        let modal = new bootstrap.Modal(document.getElementById("confirmationModal"));

       
    const selectedProducts = getSelectedProducts();
    const productList = document.getElementById("selected-products-list");
    productList.innerHTML = selectedProducts.length === 0 ? "<li>Ch∆∞a c√≥ s·∫£n ph·∫©m n√†o ƒë∆∞·ª£c ch·ªçn.</li>" : "";

    let totalPrice = 0;
    selectedProducts.forEach(product => {
       const price = Number(product.price.toString().replace(/\./g, "")) || 0;
const total = Number(product.quantity) * price;

        totalPrice += total;
console.log("Gi√° t·ª´ product.price:", product.price);
console.log("Ki·ªÉu d·ªØ li·ªáu c·ªßa product.price:", typeof product.price);
        productList.innerHTML += `<li>${product.name} - S·ªë l∆∞·ª£ng: ${product.quantity} - T·ªïng: ${formatCurrency(total)}</li>`;
    });





        // Hi·ªÉn th·ªã h·ªôp qu√†
      const selectedBox = getSelectedGiftBox();

const price = selectedBox ? Number(selectedBox.price.replace(/\./g, "")) : 0;
document.getElementById("selected-box").textContent = selectedBox ? `${selectedBox.name} - ${price}` : "Ch∆∞a ch·ªçn";

totalPrice += price;

        // Hi·ªÉn th·ªã thi·ªáp
        const selectedCard = JSON.parse(sessionStorage.getItem("selectedCard")) || null;
        if (selectedCard) {
    document.getElementById("selected-card").textContent = `${selectedCard.name} - ${formatCurrency(5000)}`;
            document.getElementById("selected-card-img").src = selectedCard.image;
            totalPrice += 5000;
        } else {
            document.getElementById("selected-card").textContent = "Ch∆∞a ch·ªçn";
            document.getElementById("selected-card-img").src = "https://i.ytimg.com/vi/jRnBvlMUvK0/maxresdefault.jpg"; // ·∫¢nh m·∫∑c ƒë·ªãnh
        }
        document.getElementById("selected-message").textContent = getPersonalMessage();
        document.getElementById("total-price").textContent = `${formatCurrency(totalPrice)}`;

        modal.show();
    }

    // ‚è© G·ªçi khi nh·∫•n n√∫t "G·ª≠i qu√† t·∫∑ng"
    document.querySelector(".btn-success.next").addEventListener("click", showConfirmation);


    document.getElementById("cashForm").addEventListener("submit", function () {
        // L·∫•y d·ªØ li·ªáu t·ª´ sessionStorage
        const selectedProducts = sessionStorage.getItem("selectedProducts") || "[]";
        const selectedBox = sessionStorage.getItem("selectedGiftBox") || "{}";
        const selectedCard = sessionStorage.getItem("selectedCard") || "{}";
        const personalMessage = sessionStorage.getItem("personalMessage") || "";
        let totalPrice = parseInt(sessionStorage.getItem("totalPrice")) || 0;

        // C·ªông th√™m gi√° c·ªßa thi·ªáp (n·∫øu c√≥)
        if (selectedCard !== "{}") {
            totalPrice += 5000;
        }

        // G√°n d·ªØ li·ªáu v√†o input hidden
        document.getElementById("selectedProductsInput").value = selectedProducts;
        document.getElementById("selectedBoxInput").value = selectedBox;
        document.getElementById("selectedCardInput").value = selectedCard;
        document.getElementById("personalMessageInput").value = personalMessage;
        document.getElementById("totalPriceInput").value = totalPrice;


        sessionStorage.removeItem("selectedProducts");
        sessionStorage.removeItem("selectedGiftBox");
        sessionStorage.removeItem("selectedCard");
        sessionStorage.removeItem("personalMessage");
        sessionStorage.removeItem("totalPrice");
    });

    window.addEventListener("beforeunload", function () {
        if (!window.location.href.includes("/custom-gifts")) {
            console.log("Ng∆∞·ªùi d√πng r·ªùi kh·ªèi trang custom-gifts -> X√≥a sessionStorage");
            sessionStorage.removeItem("selectedProducts");
            sessionStorage.removeItem("selectedGiftBox");
            sessionStorage.removeItem("selectedCard");
            sessionStorage.removeItem("personalMessage");
            sessionStorage.removeItem("totalPrice");
        }
    });



</script>
